; ------------------------------------------------------------------------
;    _       ___      _______     _       ___     __           __
;   | |     / (_)___ /  / __ \   | |     / (_)___/ /___  ___  / /______
;   | | /| / / / __ \/ / / / /   | | /| / / / __  / __ \/ _ \/ __/ ___/
;   | |/ |/ / / / / / / /_/ /    | |/ |/ / / /_/ / /_/ /  __/ /_(__  ) 
;   |__/|__/_/_/ /_/_/\____/     |__/|__/_/\__,_/\__, /\___/\__/____/
;                                               /____/
;
;	Win10 Widgets for Rainmeter - Weather (ExtraLarge)
;		Author  - TJ Markham, http://tjmarkham.com
;		Website - http://win10widgets.com
;		Donate  - http://donate.win10widgets.com
;
; ------------------------------------------------------------------------

; Known bug(s):
; - Sometimes the OnWakeAction is not executed after computer wakes up. 
;	Not sure what the reason behind this is, I suspect it has to do 
;	with the auto-wakeup feature in Windows 10 (used for updates). To fix,
;	simply click the "Refresh" button or refresh the skin.
; - Sometimes the weather data feed goes down. Nothing I can do about 
;	that.

[Rainmeter]
Update=100
DefaultUpdateDivider=-1
; Check internet connectivity when computer wakes up.
OnWakeAction=[!Log "Awake!"][!UpdateMeasure MeasureInternetConnectivity]
; Context menu option to auto-select location based on user's IP.
ContextTitle3="Auto-location"
ContextAction3=[!WriteKeyValue Variables AutoLocation 1 #CoreFilePath#][!WriteKeyValue Variables FirstStep "MeasureLocation" #CoreFilePath#][!WriteKeyValue Variables WeatherURL "" #CoreFilePath#][!Refresh]
; Context menu option to change location based on user supplied location.
ContextTitle4="Set location	(auto: off)"
ContextAction4=[!ShowMeterGroup LocationOverlay][!SetOption MeasureLocationInput DefaultValue "#Location#"][!SetOption LocationInputOverlay Text "#Location#"][!UpdateMeter LocationInputOverlay][!CommandMeasure MeasureLocationInput "ExecuteBatch All"]
; Context menu separator.
ContextTitle5="-"
; Context menu option to change units to imperial units (Fahrenheit, mph, mi, in, etc.).
ContextTitle6="Imperial units (F)"
ContextAction6=[!SetVariable MetricUnits 0][!WriteKeyValue Variables MetricUnits 0 #CoreFilePath#][!UpdateMeasure MeasureUnits]
; Context menu option to change units to metric units (Celsius, km/h, km, mb, etc.).
ContextTitle7="Metric units (C)"
ContextAction7=[!SetVariable MetricUnits 1][!WriteKeyValue Variables MetricUnits 1 #CoreFilePath#][!UpdateMeasure MeasureUnits]
; Context menu separator.
ContextTitle8="-"
; Context menu option to change times to 12-hour format.
ContextTitle9="12-hour time"
ContextAction9=[!SetVariable 24HourTime 0][!WriteKeyValue Variables 24HourTime 0 #CoreFilePath#][!UpdateMeasure MeasureTimeFormat]
; Context menu option to change times to 24-hour format.
ContextTitle10="24-hour time"
ContextAction10=[!SetVariable 24HourTime 1][!WriteKeyValue Variables 24HourTime 1 #CoreFilePath#][!UpdateMeasure MeasureTimeFormat]
; Context menu separator.
ContextTitle11="-"
ContextTitle12="Chinese"
ContextAction12=[!WriteKeyValue Variables Language Chinese #CoreFilePath#][!Refresh]
ContextTitle13="Dutch"
ContextAction13=[!WriteKeyValue Variables Language Dutch #CoreFilePath#][!Refresh]
ContextTitle14="English"
ContextAction14=[!WriteKeyValue Variables Language English #CoreFilePath#][!Refresh]
ContextTitle15="French"
ContextAction15=[!WriteKeyValue Variables Language French #CoreFilePath#][!Refresh]
ContextTitle16="German"
ContextAction16=[!WriteKeyValue Variables Language German #CoreFilePath#][!Refresh]
ContextTitle17="Italian"
ContextAction17=[!WriteKeyValue Variables Language Italian #CoreFilePath#][!Refresh]
ContextTitle18="Japanese"
ContextAction18=[!WriteKeyValue Variables Language Japanese #CoreFilePath#][!Refresh]
ContextTitle19="Polish"
ContextAction19=[!WriteKeyValue Variables Language Polish #CoreFilePath#][!Refresh]
ContextTitle20="Portuguese"
ContextAction20=[!WriteKeyValue Variables Language Portuguese #CoreFilePath#][!Refresh]
ContextTitle21="Russian"
ContextAction21=[!WriteKeyValue Variables Language Russian #CoreFilePath#][!Refresh]
ContextTitle22="Spanish"
ContextAction22=[!WriteKeyValue Variables Language Spanish #CoreFilePath#][!Refresh]

[Metadata]
Name=Weather (ExtraLarge)
Author=Eclectic Tech (based on Win10 Widgets by TJ Markham)
Information=Displays the current/future weather based on IP location or user-supplied zip code.
License=Creative Commons BY-NC-SA 4.0
Version=1.2019.05.19

[Variables]
; To create your own translation, open '@Resources\Language\english.inc' and follow the instructions. Save in that folder as your language name e.g. 'dialect.inc'
; Set your language variable below
; Available:
; Chinese Dutch English French German Italian Japanese Polish Portuguese Russian Spanish
Language=English
@Include=#@#theme.ini
@Include1=#@#systemColors.ini
@Include2=#@#variables.ini
@Include3=#@#styles.ini
@Include4=#@#background.ini
@Include5=#@#Language\#Language#.inc
@Include6=#@#utf16.ini
CoreFilePath=""#CURRENTPATH#Weather-ExtraLarge.ini""
BackgroundHeight=212
AutoBorder=1
MBtoINconversionFactor=33.8637526

WOEIDurlPart1="http://wxdata.weather.com/wxdata/search/search?where="
WOEIDurlPart2=
WOEIDurl=""

WeatherURLpart1Zip="https://wxdata.weather.com/wxdata/weather/local/"
WeatherURLpart2Zip="?cc=*&unit=f&dayf=6&locale=#*LocalLanguage*#"

WeatherURLpart1WOEID="https://wxdata.weather.com/wxdata/weather/local/"
WeatherURLpart2WOEID="?cc=*&unit=f&dayf=6&locale=#*LocalLanguage*#"
WeatherURL=https://wxdata.weather.com/wxdata/weather/local/GMXX0024?cc=*&unit=f&dayf=6&locale=#LocalLanguage#

AutoLocation=1
FirstStep=MeasureZipCode
UpdateRate=16425
Location=Central Park,NY
WindDirection=360
MetricUnits=1
24HourTime=0
TempUnit=f
UnitTemp="F"
UnitSpeed="mph"
UnitDistance="mi"
UnitPressure="in"

; ------------------------------------------------------------------------
; MEASURES
; ------------------------------------------------------------------------

[MeasureUnits]
; Sets units depending on status of #MetricUnits# (which is controlled by context menu options).
Measure=Calc
; 0: Imperial Units, 1: Metric Units
IfCondition=(#MetricUnits#=0)
IfTrueAction=[!SetVariable UnitTemp "F"][!SetOption MeterTemp MeasureName MeasureTempF][!SetOption MeterFeelsLike MeasureName MeasureFeelsLikeF][!SetOption MeterDay1High MeasureName MeasureDay1HighF][!SetOption MeterDay1Low MeasureName MeasureDay1LowF][!SetOption MeterDay2High MeasureName MeasureDay2HighF][!SetOption MeterDay2Low MeasureName MeasureDay2LowF][!SetOption MeterDay3High MeasureName MeasureDay3HighF][!SetOption MeterDay3Low MeasureName MeasureDay3LowF][!SetOption MeterDay4High MeasureName MeasureDay4HighF][!SetOption MeterDay4Low MeasureName MeasureDay4LowF][!SetOption MeterDay5High MeasureName MeasureDay5HighF][!SetOption MeterDay5Low MeasureName MeasureDay5LowF][!SetVariable UnitSpeed "mph"][!SetOption MeterWind MeasureName MeasureWindSpeedMPH][!SetVariable UnitDistance "mi"][!SetOption MeterVisibility MeasureName MeasureVisibilityMI][!SetVariable UnitPressure "in"][!SetOption MeterBarometer MeasureName MeasureBarometerIN][!UpdateMeterGroup UnitMeters]
IfFalseAction=[!SetVariable UnitTemp "C"][!SetOption MeterTemp MeasureName MeasureTempC][!SetOption MeterFeelsLike MeasureName MeasureFeelsLikeC][!SetOption MeterDay1High MeasureName MeasureDay1HighC][!SetOption MeterDay1Low MeasureName MeasureDay1LowC][!SetOption MeterDay2High MeasureName MeasureDay2HighC][!SetOption MeterDay2Low MeasureName MeasureDay2LowC][!SetOption MeterDay3High MeasureName MeasureDay3HighC][!SetOption MeterDay3Low MeasureName MeasureDay3LowC][!SetOption MeterDay4High MeasureName MeasureDay4HighC][!SetOption MeterDay4Low MeasureName MeasureDay4LowC][!SetOption MeterDay5High MeasureName MeasureDay5HighC][!SetOption MeterDay5Low MeasureName MeasureDay5LowC][!SetVariable UnitSpeed "km/h"][!SetOption MeterWind MeasureName MeasureWindSpeedKPH][!SetVariable UnitDistance "km"][!SetOption MeterVisibility MeasureName MeasureVisibilityKM][!SetVariable UnitPressure "mb"][!SetOption MeterBarometer MeasureName MeasureBarometerMB][!UpdateMeterGroup UnitMeters]
DynamicVariables=1

[MeasureTimeFormat]
; Sets 12-hr or 24-hr time format depending on #24Hourtime# (which is controlled by context menu options).
Measure=Calc
; 0: 12-hr time format, 1: 24-hr time format
IfCondition=(#24HourTime#=0)
IfTrueAction=[!SetOption MeasureTime Format "%#I:%M %p"][!UpdateMeasure MeasureTime][!UpdateMeter MeterLocation][!SetOption MeterSunrise MeasureName MeasureSunrise12][!UpdateMeter MeterSunrise][!SetOption MeterSunset MeasureName MeasureSunset12][!UpdateMeter MeterSunset]
IfFalseAction=[!SetOption MeasureTime Format "%#H:%M"][!UpdateMeasure MeasureTime][!UpdateMeter MeterLocation][!SetOption MeterSunrise MeasureName MeasureSunrise24][!UpdateMeter MeterSunrise][!SetOption MeterSunset MeasureName MeasureSunset24][!UpdateMeter MeterSunset]
DynamicVariables=1

[MeasureAutoLocation]
; Changes data flow depending on whether auto-location is turned on or not.
Measure=Calc
; 0: Auto-location off, 1: Auto-location on
IfCondition=(#AutoLocation#=0)
IfTrueAction=[!DisableMeasure MeasureZipCode][!SetOption MeasureWeather UpdateDivider #UpdateRate#]
IfFalseAction=[!EnableMeasure MeasureZipCode]

[MeasureInternetConnectivity]
; Returns the status of the internet connection.
; Changes error text depending on situation.
Measure=Plugin
Plugin=SysInfo
SysInfoType=INTERNET_CONNECTIVITY
; -1: No Internet, 1: Connected
IfCondition=(MeasureInternetConnectivity=-1)
;IfTrueAction=[!Log "Lost Internet..."]
IfTrueAction=[!SetOption PreButtonText2 Text "Connect to internet and try again."]
;IfFalseAction=[!Log "Found Internet..."]
IfFalseAction=[!SetOption PreButtonText2 Text "Try again in a couple seconds."][!UpdateMeasure #FirstStep#]
;[!CommandMeasure #FirstStep# Update]

[MeasureZipCode]
; Returns Zip Code of current location (not the *most* accurate, but it's not bad).
; Success action: Sets WeatherURL for future use and initiates MeasureWeather.
; Failure action: Shows RefreshOverlay
Measure=Plugin
Plugin=WebParser.dll
URL=http://ipinfo.io/postal
;URL=file://#CURRENTPATH#test-zip.txt
RegExp=\d+
;OnUpdateAction=[!Log "Retrieving Zip Code..."]
;FinishAction=[!Log "Retrieved Zip Code."]
FinishAction=[!SetOption RefreshButton MouseLeaveAction "[]"][!UpdateMeter RefreshButton][!HideMeterGroup RefreshOverlay][!SetVariable WeatherURL "#WeatherURLpart1Zip#[MeasureZipCode]#WeatherURLpart2Zip#"][!UpdateMeasure MeasureWeather]
OnConnectErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter RetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge][!ShowMeter RefreshButtonEdge][!ShowMeter RefreshButtonCenter]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
OnRegExpErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter RetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge][!ShowMeter RefreshButtonEdge][!ShowMeter RefreshButtonCenter]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
UpdateDivider=#UpdateRate#
UpdateRate=1

[MeasureLocationWOEID]
; Checks to see if user-provided location is valid (i.e. has a corresponding WOEID). If location is valid, turns off auto-location and sets the WeatherURL.
Measure=Plugin
Plugin=WebParser.dll
URL=#WOEIDurl#
;URL=file://#CURRENTPATH#test-woeid.txt
; <loc id="USCA9326" type="1">Palmdale East, CA</loc></search>
RegExp=(?isU).*<loc id="(.*)".*">(.*)</
RegExpSubstitute=1
Substitute="^$":"USNY0996"
;OnUpdateAction=[!Log "Testing WOEID..."]
;FinishAction=[!Log "Good WOEID."]
StringIndex=1
FinishAction=[!WriteKeyValue Variables AutoLocation 0 #CoreFilePath#][!WriteKeyValue Variables FirstStep "MeasureWeather" #CoreFilePath#][!WriteKeyValue Variables WeatherURL "#WeatherURLpart1WOEID#[&MeasureLocationWOEID]#WeatherURLpart2WOEID#" #CoreFilePath#][!Refresh]

OnConnectErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter RetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge][!ShowMeter RefreshButtonEdge][!ShowMeter RefreshButtonCenter]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
;OnRegExpErrorAction=[!Log "Bad WOEID."]

OnRegExpErrorAction=[!HideMeter CheckingLocationText][!ShowMeter ErrorText]
DynamicVariables=1
UpdateRate=1

[MeasureWeather]
; Returns current conditions and 5-day forecast.
Measure=Plugin
Plugin=WebParser.dll
URL=#WeatherURL#
;URL=file://#CURRENTPATH#test-Weather.txt
RegExp="(?siU)<ut>(.*)</ut>.*<ud>(.*)</ud>.*<us>(.*)</us>.*<up>(.*)</up>.*<ur>(.*)</ur>.*<lat>(.*)</lat>.*<lon>(.*)</lon>.*<zone>(.*)</zone>.*<lsup>(.*)</lsup>.*<obst>(.*)</obst>.*<tmp>(.*)</tmp>.*<flik>(.*)</flik>.*<t>(.*)</t>.*<icon>(.*)</icon>.*<r>(.*)</r>.*<d>(.*)</d>.*<s>(.*)</s>.*<gust>(.*)</gust>.*<d>(.*)</d>.*<t>(.*)</t>.*<hmid>(.*)</hmid>.*<vis.(.*)</vis>.*<i>(.*)</i>.*<t>(.*)</t>.*<dewp>(.*)</dewp>.*<icon>(.*)</icon>.*<t>(.*)</t>.*<dayf>.*<day d="0" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="1" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="2" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="3" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="4" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<day d="5" t="(.*)" dt="(.*)">.*<hi>(.*)</hi>.*<low>(.*)</low>.*<sunr>(.*)</sunr>.*<suns>(.*)</suns>.*<part p="d">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*<part p="n">.*<icon>(.*)</icon>.*<t>(.*)</t>.*</part>.*"
OnUpdateAction=[!Log "Retrieving weather..."]
FinishAction=[!Log "Retrieved weather."][!SetOption RefreshButton MouseLeaveAction "[]"][!UpdateMeter RefreshButton][!HideMeterGroup RefreshOverlay][!UpdateMeasureGroup WeatherMeasures][!ShowMeterGroup WeatherMeters][!UpdateMeterGroup WeatherMeters][!HideMeter RetrievingWeather]
OnConnectErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter RetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge][!ShowMeter RefreshButtonEdge][!ShowMeter RefreshButtonCenter]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
OnRegExpErrorAction=[!HideMeterGroup WeatherMeters][!ShowMeter RetrievingWeather][!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge][!ShowMeter RefreshButtonEdge][!ShowMeter RefreshButtonCenter]"][!UpdateMeter RefreshButton][!ShowMeterGroup RefreshOverlay][!HideMeter RefreshButtonHoverEdge]
DynamicVariables=1
UpdateRate=1
ForceReload=1

[MeasureTime]
; Returns time in 12-hour format (omitting first 0 of hour).
Measure=Time
Format=%#I:%M %p
OnChangeAction=[!UpdateMeter MeterUpdatedTime]
Group=WeatherMeasures

;[MeasureUpdatedTime]
;Measure=Plugin
;Plugin=WebParser.dll
;URL=[MeasureWeather]
;StringIndex=2
;RegExp=\d{1,2}:\d{2} (AM|PM)
;RegExpSubstitute=1
;Substitute="0(\d{1}):":"\1:"
;OnChangeAction=[!UpdateMeter MeterUpdatedTime]
;Group=WeatherMeasures

;[MeasureUpdatedDate]
;Measure=Plugin
;Plugin=WebParser.dll
;URL=[MeasureWeather]
;StringIndex=2
;RegExp=\d+ \D+ \d+
;RegExpSubstitute=1
;Substitute="(\d+) (\D+) (\d+)":"\2 \1, \3"
;OnChangeAction=[!UpdateMeter MeterUpdatedTime]
;Group=WeatherMeasures

[MeasureCity]
; Returns city.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=10
RegExpSubstitute=1
Substitute="^(.*), (.*), (.*)$":"\1"
OnChangeAction=[!UpdateMeter MeterLocation][!SetVariable Location "[MeasureCity],[MeasureRegion]"][!UpdateMeter LocationInputOverlay]
Group=WeatherMeasures

[MeasureRegion]
; Returns region (State if you're in the US).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=10
RegExpSubstitute=1
Substitute="^(.*), (.*), (.*)$":"\2"
OnChangeAction=[!UpdateMeter MeterLocation][!SetVariable Location "[MeasureCity],[MeasureRegion]"][!UpdateMeter LocationInputOverlay]
Group=WeatherMeasures

[MeasureFeelsLike]
; Returns "feels like" temperature (current temperature minus wind chill).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=12
OnChangeAction=[!UpdateMeasure MeasureFeelsLikeF][!UpdateMeasure MeasureFeelsLikeC]
Group=WeatherMeasures

[MeasureFeelsLikeF]
; Returns "feels like" temperature in Fahrenheit
Measure=Calc
Formula=Round(MeasureFeelsLike,0)
OnChangeAction=[!UpdateMeter MeterFeelsLike]

[MeasureFeelsLikeC]
; Returns "feels like" temperature in Celsius.
Measure=Calc
Formula=Round(((MeasureFeelsLike-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterFeelsLike]

[MeasureWindDirection]
; Returns direction (1-360 degrees) of where wind is blowing from.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=19
Substitute="":"0"
OnChangeAction=[!SetVariable WindDirection [MeasureWindDirection]][!UpdateMeter MeterWindDirection]
Group=WeatherMeasures

[MeasureWindSpeed]
; Returns wind speed.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=17
OnChangeAction=[!UpdateMeasure MeasureWindSpeedKPH][!UpdateMeasure MeasureWindSpeedMPH]
Group=WeatherMeasures

[MeasureWindSpeedKPH]
; Returns wind speed in kilometers/hour.
Measure=Calc
Formula=Round(MeasureWindSpeed,0)
OnChangeAction=[!UpdateMeter MeterWind]
[MeasureWindSpeedMPH]
; Returns wind speed in miles/hour.
Measure=Calc
Formula=Round((MeasureWindSpeed*#KMtoMIconversionFactor#),0)
OnChangeAction=[!UpdateMeter MeterWind]

[MeasureHumidity]
; Returns humidity.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=21
OnChangeAction=[!UpdateMeter MeterHumidity]
Group=WeatherMeasures

[MeasureVisibility]
; Returns visibility.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=22
OnChangeAction=[!UpdateMeasure MeasureVisibilityKM][!UpdateMeasure MeasureVisibilityMI]
Group=WeatherMeasures

[MeasureVisibilityKM]
; Returns visibility in kilometers.
Measure=Calc
Formula=Round(MeasureVisibility,0)
OnChangeAction=[!UpdateMeter MeterVisibility]

[MeasureVisibilityMI]
; Returns visibility in miles.
Measure=Calc
Formula=Round((MeasureVisibility*#KMtoMIconversionFactor#),0)
OnChangeAction=[!UpdateMeter MeterVisibility]

[MeasureBarometer]
; Returns barometer reading (pressure).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=15
OnChangeAction=[!UpdateMeasure MeasureBarometerMB][!UpdateMeasure MeasureBarometerIN]
Group=WeatherMeasures

[MeasureBarometerIN]
; Returns barometer reading (pressure) in millibars.
Measure=Calc
Formula=Round(MeasureBarometer,2)
OnChangeAction=[!UpdateMeter MeterBarometer]

[MeasureBarometerMB]
; Returns barometer reading (pressure) in inches of mercury.
Measure=Calc
Formula=Round((MeasureBarometer*#MBtoINconversionFactor#),2)
OnChangeAction=[!UpdateMeter MeterBarometer]

[MeasureSunrise12]
; Returns time of sunrise in 12-hr time format.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=32
RegExpSubstitute=1
Substitute=":(\d{1}) ":":0\1 ","am":"AM","pm":"PM"
OnChangeAction=[!UpdateMeasure MeasureSunriseHour][!UpdateMeasure MeasureSunriseMinute][!UpdateMeasure MeasureSunriseAMPM][!UpdateMeter MeterSunrise]
Group=WeatherMeasures

[MeasureSunriseHour]
; Returns hour of sunrise in 12-hr time format.
Measure=String
String=[MeasureSunrise12]
RegExpSubstitute=1
Substitute="(\d{1,2}):.*":"\1"
OnChangeAction=[!UpdateMeasure MeasureSunriseHour24][!UpdateMeasure MeasureSunrise24]
DynamicVariables=1

[MeasureSunriseMinute]
; Returns minute of sunrise.
Measure=String
String=[MeasureSunrise12]
RegExpSubstitute=1
Substitute="\d{1,2}(:\d{2}).*":"\1"
OnChangeAction=[!UpdateMeasure MeasureSunrise24]
DynamicVariables=1

[MeasureSunriseAMPM]
; Returns AM/PM status of sunrise.
Measure=String
String=[MeasureSunrise12]
RegExpSubstitute=1
Substitute="\d{1,2}:\d{2} (.*)":"\1","AM":"0","PM":"1","上午":"0","下午":"1","午前":"0","午後":"1","":"0"
OnChangeAction=[!UpdateMeasure MeasureSunriseHour24]
DynamicVariables=1

[MeasureSunriseHour24]
; Returns hour of sunrise in 24-hr time format.
Measure=Calc
Formula=([MeasureSunriseAMPM] = 0 ? MeasureSunriseHour : (MeasureSunriseHour+12))
OnChangeAction=[!UpdateMeasure MeasureSunrise24]
DynamicVariables=1

[MeasureSunrise24]
; Returns time of sunrise in 24-hr time format.
Measure=String
String=[MeasureSunriseHour24][MeasureSunriseMinute]
OnChangeAction=[!UpdateMeter MeterSunrise]
DynamicVariables=1

[MeasureSunset12]
; Returns time of sunset in 12-hr time format.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=33
RegExpSubstitute=1
Substitute=":(\d{1}) ":":0\1 ","am":"AM","pm":"PM"
OnChangeAction=[!UpdateMeasure MeasureSunsetHour][!UpdateMeasure MeasureSunsetMinute][!UpdateMeasure MeasureSunsetAMPM][!UpdateMeter MeterSunset]
Group=WeatherMeasures

[MeasureSunsetHour]
; Returns hour of sunset in 12-hr time format.
Measure=String
String=[MeasureSunset12]
RegExpSubstitute=1
Substitute="(\d{1,2}):.*":"\1"
OnChangeAction=[!UpdateMeasure MeasureSunsetHour24][!UpdateMeasure MeasureSunset24]
DynamicVariables=1

[MeasureSunsetMinute]
; Returns minute of sunset.
Measure=String
String=[MeasureSunset12]
RegExpSubstitute=1
Substitute="\d{1,2}(:\d{2}).*":"\1"
OnChangeAction=[!UpdateMeasure MeasureSunset24]
DynamicVariables=1

[MeasureSunsetAMPM]
; Returns AM/PM status of sunset.
Measure=String
String=[MeasureSunset12]
RegExpSubstitute=1
Substitute="\d{1,2}:\d{2} (.*)":"\1","AM":"0","PM":"1","上午":"0","下午":"1","午前":"0","午後":"1","":"0"
OnChangeAction=[!UpdateMeasure MeasureSunsetHour24]
DynamicVariables=1

[MeasureSunsetHour24]
; Returns hour of sunset in 24-hr time format.
Measure=Calc
Formula=([MeasureSunsetAMPM] = 0 ? MeasureSunsetHour : (MeasureSunsetHour+12))
OnChangeAction=[!UpdateMeasure MeasureSunset24]
DynamicVariables=1

[MeasureSunset24]
; Returns time of sunset in 24-hr time format.
Measure=String
String=[MeasureSunsetHour24][MeasureSunsetMinute]
OnChangeAction=[!UpdateMeter MeterSunset]
DynamicVariables=1

[MeasureForecastText]
; Returns text reflecting the current condition (e.g. "Mostly Sunny").
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=13
OnChangeAction=[!UpdateMeter MeterForecastText]
Group=WeatherMeasures

[MeasureImageCode]
; Returns icon code for the image of the current condition.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=14
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterForecastImage]
Group=WeatherMeasures

[MeasureTemp]
; Returns current temperature.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=11
OnChangeAction=[!UpdateMeasure MeasureTempF][!UpdateMeasure MeasureTempC]
Group=WeatherMeasures

[MeasureTempF]
; Returns current temperature in Fahrenheit.
Measure=Calc
Formula=Round(MeasureTemp,0)
OnChangeAction=[!UpdateMeter MeterTemp]

[MeasureTempC]
; Returns current temperature in Celsius.
Measure=Calc
Formula=Round(((MeasureTemp-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterTemp]

[MeasureDay1]
; Returns abbreviated name of day 1 (e.g. Mon).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=28
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay1]
Group=WeatherMeasures

[MeasureDay1Low]
; Returns forecasted low temperature for day 1.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=31
OnChangeAction=[!UpdateMeasure MeasureDay1LowF][!UpdateMeasure MeasureDay1LowC]
Group=WeatherMeasures

[MeasureDay1LowF]
; Returns forecasted low temperature for day 1 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay1Low,0)
OnChangeAction=[!UpdateMeter MeterDay1Low]

[MeasureDay1LowC]
; Returns forecasted low temperature for day 1 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay1Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay1Low]

[MeasureDay1High]
; Returns forecasted high temperature for day 1.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=30
OnChangeAction=[!UpdateMeasure MeasureDay1HighF][!UpdateMeasure MeasureDay1HighC]
Group=WeatherMeasures

[MeasureDay1HighF]
; Returns forecasted high temperature for day 1 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay1High,0)
OnChangeAction=[!UpdateMeter MeterDay1High]

[MeasureDay1HighC]
; Returns forecasted high temperature for day 1 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay1High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay1High]

[MeasureDay1Code]
; Returns icon code for the image of the forecasted condition for day 1.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=34
Substitute="":"[&MeasureDay1CodeN]"
;"3200"
OnChangeAction=[!UpdateMeter MeterDay1Image]
Group=WeatherMeasures
DynamicVariables=1

[MeasureDay1CodeN]
; Returns icon code for the image of the forecasted condition for day 1.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=36
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay1Image]
Group=WeatherMeasures

[MeasureDay2]
; Returns abbreviated name of day 2 (e.g. Tue).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=38
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay2]
Group=WeatherMeasures

[MeasureDay2Low]
; Returns forecasted low temperature for day 2.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=41
OnChangeAction=[!UpdateMeasure MeasureDay2LowF][!UpdateMeasure MeasureDay2LowC]
Group=WeatherMeasures

[MeasureDay2LowF]
; Returns forecasted low temperature for day 2 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay2Low,0)
OnChangeAction=[!UpdateMeter MeterDay2Low]

[MeasureDay2LowC]
; Returns forecasted low temperature for day 2 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay2Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay2Low]

[MeasureDay2High]
; Returns forecasted high temperature for day 2.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=40
OnChangeAction=[!UpdateMeasure MeasureDay2HighF][!UpdateMeasure MeasureDay2HighC]
Group=WeatherMeasures

[MeasureDay2HighF]
; Returns forecasted high temperature for day 2 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay2High,0)
OnChangeAction=[!UpdateMeter MeterDay2High]

[MeasureDay2HighC]
; Returns forecasted high temperature for day 2 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay2High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay2High]

[MeasureDay2Code]
; Returns icon code for the image of the forecasted condition for day 2.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=44
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay2Image]
Group=WeatherMeasures

[MeasureDay3]
; Returns abbreviated name of day 3 (e.g. Wed).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=48
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay3]
Group=WeatherMeasures

[MeasureDay3Low]
; Returns forecasted low temperature for day 3.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=51
OnChangeAction=[!UpdateMeasure MeasureDay3LowF][!UpdateMeasure MeasureDay3LowC]
Group=WeatherMeasures

[MeasureDay3LowF]
; Returns forecasted low temperature for day 3 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay3Low,0)
OnChangeAction=[!UpdateMeter MeterDay3Low]

[MeasureDay3LowC]
; Returns forecasted low temperature for day 3 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay3Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay3Low]

[MeasureDay3High]
; Returns forecasted high temperature for day 3.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=50
OnChangeAction=[!UpdateMeasure MeasureDay3HighF][!UpdateMeasure MeasureDay3HighC]
Group=WeatherMeasures

[MeasureDay3HighF]
; Returns forecasted high temperature for day 3 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay3High,0)
OnChangeAction=[!UpdateMeter MeterDay3High]

[MeasureDay3HighC]
; Returns forecasted high temperature for day 3 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay3High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay3High]

[MeasureDay3Code]
; Returns icon code for the image of the forecasted condition for day 3.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=54
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay3Image]
Group=WeatherMeasures

[MeasureDay4]
; Returns abbreviated name of day 4 (e.g. Thu).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=58
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay4]
Group=WeatherMeasures

[MeasureDay4Low]
; Returns forecasted low temperature for day 4.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=61
OnChangeAction=[!UpdateMeasure MeasureDay4LowF][!UpdateMeasure MeasureDay4LowC]
Group=WeatherMeasures

[MeasureDay4LowF]
; Returns forecasted low temperature for day 4 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay4Low,0)
OnChangeAction=[!UpdateMeter MeterDay4Low]

[MeasureDay4LowC]
; Returns forecasted low temperature for day 4 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay4Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay4Low]

[MeasureDay4High]
; Returns forecasted high temperature for day 4.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=60
OnChangeAction=[!UpdateMeasure MeasureDay4HighF][!UpdateMeasure MeasureDay4HighC]
Group=WeatherMeasures

[MeasureDay4HighF]
; Returns forecasted high temperature for day 4 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay4High,0)
OnChangeAction=[!UpdateMeter MeterDay4High]

[MeasureDay4HighC]
; Returns forecasted high temperature for day 4 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay4High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay4High]

[MeasureDay4Code]
; Returns icon code for the image of the forecasted condition for day 4.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=64
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay4Image]
Group=WeatherMeasures

[MeasureDay5]
; Returns abbreviated name of day 5 (e.g. Fri).
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=68
Substitute="Sunday":"#Sun#","Monday":"#Mon#","Tuesday":"#Tue#","Wednesday":"#Wed#","Thursday":"#Thu#","Friday":"#Fri#","Saturday":"#Sat#"
OnChangeAction=[!UpdateMeter MeterDay5]
Group=WeatherMeasures

[MeasureDay5Low]
; Returns forecasted low temperature for day 5.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=71
OnChangeAction=[!UpdateMeasure MeasureDay5LowF][!UpdateMeasure MeasureDay5LowC]
Group=WeatherMeasures

[MeasureDay5LowF]
; Returns forecasted low temperature for day 5 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay5Low,0)
OnChangeAction=[!UpdateMeter MeterDay5Low]

[MeasureDay5LowC]
; Returns forecasted low temperature for day 5 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay5Low-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay5Low]

[MeasureDay5High]
; Returns forecasted high temperature for day 5.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=70
OnChangeAction=[!UpdateMeasure MeasureDay5HighF][!UpdateMeasure MeasureDay5HighC]
Group=WeatherMeasures

[MeasureDay5HighF]
; Returns forecasted high temperature for day 5 in Fahrenheit.
Measure=Calc
Formula=Round(MeasureDay5High,0)
OnChangeAction=[!UpdateMeter MeterDay5High]

[MeasureDay5HighC]
; Returns forecasted high temperature for day 5 in Celsius.
Measure=Calc
Formula=Round(((MeasureDay5High-32)*(5/9)),0)
OnChangeAction=[!UpdateMeter MeterDay5High]

[MeasureDay5Code]
; Returns icon code for the image of the forecasted condition for day 5.
Measure=Plugin
Plugin=WebParser.dll
URL=[MeasureWeather]
StringIndex=74
Substitute="":"3200"
OnChangeAction=[!UpdateMeter MeterDay5Image]
Group=WeatherMeasures

[MeasureLocationInput]
; Accepts user input for location and initiates the location confirmation process when input is confirmed (i.e. when "enter" is pressed). 
Measure=Plugin
Plugin=InputText
Command1=[!HideMeter LocationInputBorder][!SetOption MeasureLocationInput DefaultValue "$UserInput$"][!SetOption LocationInputOverlay Text "[MeasureLocationInput]"][!UpdateMeter LocationInputOverlay][!SetVariable WOEIDurl "#WOEIDurlPart1#[MeasureLocationInput]#WOEIDurlPart2#"][!HideMeter ErrorText][!ShowMeter CheckingLocationText][!UpdateMeasure MeasureLocationWOEID]
DefaultValue=#Location#
X=([LocationInputOverlayBorder:X]+2)
Y=([LocationInputOverlayBorder:Y]+2)
W=([LocationInputOverlayBorder:W]-4)
H=([LocationInputOverlayBorder:H]-4)
SolidColor=#SolidWhite#
FontColor=#SolidBlack#
FontFace=Segoe UI
FontSize=11
StringAlign=Left
OnDismissAction=[!HideMeter LocationInputBorder]
AntiAlias=1
DynamicVariables=1


; ------------------------------------------------------------------------
; METERS
; ------------------------------------------------------------------------

[RetrievingWeather]
; Shows "Retrieving Weather...".
Meter=String
MeterStyle=StyleMediumText | StyleCenterAlign
X=(#BackgroundWidth#/2)
Y=85
Text="Retrieving Weather..."


; ------------------------------------------------------------------------
; METERS - Current Conditions
; ------------------------------------------------------------------------

[MeterForecastImage]
; Shows image reflecting the current condition.
Meter=Image
X=16
Y=21
W=54
H=54
ImageName="icons\#ForegroundThemeName#\[MeasureImageCode].png"
AntiAlias=1
Group=WeatherMeters
DynamicVariables=1
Hidden=1

[MeterForecastText]
; Shows text reflecting the current condition (e.g. "Mostly Sunny").
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText
MeasureName=MeasureForecastText
X=11R
Y=-8r
Group=WeatherMeters
Text="%1"
ClipString=2
;ClipStringW=121
ClipStringW=125
DynamicVariables=1
Hidden=1

[MeterTemp]
; Shows current temperature.
Meter=String
MeterStyle=StyleBigText
MeasureName=MeasureTempF
X=-6r
Y=15r
Group=WeatherMeters | UnitMeters
Text="%1"
Hidden=1

[MeterTempUnit]
; Shows temperature unit (°C or °F).
Meter=String
MeterStyle=StyleBigText
X=-9R
Y=0r
Group=WeatherMeters | UnitMeters
Text="#DegreeSymbol##UnitTemp#"
DynamicVariables=1
Hidden=1


; ------------------------------------------------------------------------
; METERS - Forecast
; ------------------------------------------------------------------------

[MeterDay1Image]
; Shows image of the forecasted condition for day 1.
Meter=Image
ImageName="icons\#ForegroundThemeName#\[MeasureDay1Code].png"
X=16
Y=121
W=30
H=30
AntiAlias=1
Group=WeatherMeters
DynamicVariables=1
Hidden=1

[MeterDay1]
; Shows abbreviated name of day 1 (e.g. Mon).
Meter=String
MeasureName=MeasureDay1
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
X=14r
Y=-24r
Group=WeatherMeters
Text="%1"
Hidden=1

[MeterDay1High]
; Shows forecasted high temperature for day 1.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
MeasureName=MeasureDay1HighF
X=0r
Y=45R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay1Low]
; Shows forecasted low temperature for day 1.
Meter=String
MeterStyle=StyleTinyText | StyleCenterAlign
MeasureName=MeasureDay1LowF
X=0r
Y=-1R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay2Image]
; Shows image of the forecasted condition for day 2.
Meter=Image
ImageName="icons\#ForegroundThemeName#\[MeasureDay2Code].png"
X=([MeterDay1Image:X]+[MeterDay1Image:W]+9)
Y=[MeterDay1Image:Y]
W=30
H=30
AntiAlias=1
Group=WeatherMeters
DynamicVariables=1
Hidden=1

[MeterDay2]
; Shows abbreviated name of day 2 (e.g. Tue).
Meter=String
MeasureName=MeasureDay2
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
X=14r
Y=-24r
Group=WeatherMeters
Text="%1"
Hidden=1

[MeterDay2High]
; Shows forecasted high temperature for day 2.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
MeasureName=MeasureDay2HighF
X=0r
Y=45R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay2Low]
; Shows forecasted low temperature for day 2.
Meter=String
MeterStyle=StyleTinyText | StyleCenterAlign
MeasureName=MeasureDay2LowF
X=0r
Y=-1R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay3Image]
; Shows image of the forecasted condition for day 3.
Meter=Image
ImageName="icons\#ForegroundThemeName#\[MeasureDay3Code].png"
X=([MeterDay2Image:X]+[MeterDay2Image:W]+9)
Y=[MeterDay2Image:Y]
W=30
H=30
AntiAlias=1
Group=WeatherMeters
DynamicVariables=1
Hidden=1

[MeterDay3]
; Shows abbreviated name of day 3 (e.g. Wed).
Meter=String
MeasureName=MeasureDay3
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
X=14r
Y=-24r
Group=WeatherMeters
Text="%1"
Hidden=1

[MeterDay3High]
; Shows forecasted high temperature for day 3.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
MeasureName=MeasureDay3HighF
X=0r
Y=45R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay3Low]
; Shows forecasted low temperature for day 3.
Meter=String
MeterStyle=StyleTinyText | StyleCenterAlign
MeasureName=MeasureDay3LowF
X=0r
Y=-1R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay4Image]
; Shows image of the forecasted condition for day 4.
Meter=Image
ImageName="icons\#ForegroundThemeName#\[MeasureDay4Code].png"
X=([MeterDay3Image:X]+[MeterDay3Image:W]+9)
Y=[MeterDay3Image:Y]
W=30
H=30
AntiAlias=1
Group=WeatherMeters
DynamicVariables=1
Hidden=1

[MeterDay4]
; Shows abbreviated name of day 4 (e.g. Thu).
Meter=String
MeasureName=MeasureDay4
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
X=14r
Y=-24r
Group=WeatherMeters
Text="%1"
Hidden=1

[MeterDay4High]
; Shows forecasted high temperature for day 4.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
MeasureName=MeasureDay4HighF
X=0r
Y=45R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay4Low]
; Shows forecasted low temperature for day 4.
Meter=String
MeterStyle=StyleTinyText | StyleCenterAlign
MeasureName=MeasureDay4LowF
X=0r
Y=-1R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay5Image]
; Shows image of the forecasted condition for day 5.
Meter=Image
ImageName="icons\#ForegroundThemeName#\[MeasureDay5Code].png"
X=([MeterDay4Image:X]+[MeterDay4Image:W]+9)
Y=[MeterDay4Image:Y]
W=30
H=30
AntiAlias=1
Group=WeatherMeters
DynamicVariables=1
Hidden=1

[MeterDay5]
; Shows abbreviated name of day 5 (e.g. Fri).
Meter=String
MeasureName=MeasureDay5
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
X=14r
Y=-24r
Group=WeatherMeters
Text="%1"
Hidden=1

[MeterDay5High]
; Shows forecasted high temperature for day 5.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText | StyleCenterAlign
MeasureName=MeasureDay5HighF
X=0r
Y=45R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1

[MeterDay5Low]
; Shows forecasted low temperature for day 5.
Meter=String
MeterStyle=StyleTinyText | StyleCenterAlign
MeasureName=MeasureDay5LowF
X=0r
Y=-1R
Group=WeatherMeters | UnitMeters
Text="%1#DegreeSymbol#"
Hidden=1


; ------------------------------------------------------------------------
; METERS - Side Labels
; ------------------------------------------------------------------------

[FeelsLikeLabel]
; Shows "Feels Like".
Meter=String
MeterStyle=StyleTinyText
X=214
Y=14
Group=WeatherMeters
Text=#FeelsLike#
;"Feels Like"
Hidden=1

[WindLabel]
; Shows "Wind".
Meter=String
MeterStyle=StyleTinyText
X=0r
Y=0R
Group=WeatherMeters
Text=#Wind#
;"Wind"
Hidden=1

[VisibilityLabel]
; Shows "Visibility".
Meter=String
MeterStyle=StyleTinyText
X=0r
Y=0R
Group=WeatherMeters
Text=#Visibility#
;"Visibility"
Hidden=1

[BarometerLabel]
; Shows "Barometer".
Meter=String
MeterStyle=StyleTinyText
X=0r
Y=0R
Group=WeatherMeters
Text=#Barometer#
;"Barometer"
Hidden=1

[HumidityLabel]
; Shows "Humidity".
Meter=String
MeterStyle=StyleTinyText
X=0r
Y=0R
Group=WeatherMeters
Text=#Humidity#
;"Humidity"
Hidden=1

[SunriseLabel]
; Shows "Sunrise".
Meter=String
MeterStyle=StyleTinyText
X=0r
Y=15R
Group=WeatherMeters
Text=#Sunrise#
;"Sunrise"
Hidden=1

[SunsetLabel]
; Shows "Sunset".
Meter=String
MeterStyle=StyleTinyText
X=0r
Y=0R
Group=WeatherMeters
Text=#Sunset#
;"Sunset"
Hidden=1

[MeterUpdatedTime]
; Shows last time weather data was updated.
Meter=String
MeterStyle=StyleTinyText | StyleCenterAlign
MeasureName=MeasureTime
X=279
Y=15R
Group=WeatherMeters
Text=#UpdatedAt# %1
;"Updated at %1"
Hidden=1

[MeterLocation]
; Shows the location corresponding to the current weather forecast.
Meter=String
MeterStyle=StyleTinyText | StyleCenterAlign
MeasureName=MeasureCity
MeasureName2=MeasureRegion
X=279
Y=1R
H=18
Group=WeatherMeters
Text="%1,%2"
ClipString=2
ClipStringW=119
Hidden=1


; ------------------------------------------------------------------------
; METERS - Side Values
; ------------------------------------------------------------------------

[MeterFeelsLike]
; Shows "feels like" temperature (current temperature minus wind chill).
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText
MeasureName=MeasureFeelsLikeF
;([FeelsLikeLabel:X]+65)
X=([BackgroundBox:W]-8)
StringAlign=Right
Y=[FeelsLikeLabel:Y]
Group=WeatherMeters | UnitMeters
Text="%1 #DegreeSymbol##UnitTemp#"
DynamicVariables=1
Hidden=1

[MeterWindDirection]
; Arrow icon shows direction wind is blowing.
Meter=Image
ImageName="icons\#ForegroundThemeName#\WindDirection.png"
X=([BackgroundBox:W]-71)
StringAlign=Right
Y=([WindLabel:Y]+2)
W=12
H=12
AntiAlias=1
Group=WeatherMeters
DynamicVariables=1
TransformationMatrix=(Cos(Rad(#WindDirection#)));(Sin(Rad(#WindDirection#)));(-Sin(Rad(#WindDirection#)));(Cos(Rad(#WindDirection#)));(([MeterWindDirection:X]+0.5*[MeterWindDirection:W])-([MeterWindDirection:X]+0.5*[MeterWindDirection:W])*Cos(Rad(#WindDirection#))+([MeterWindDirection:Y]+0.5*[MeterWindDirection:H])*Sin(Rad(#WindDirection#)));(([MeterWindDirection:Y]+0.5*[MeterWindDirection:H])-([MeterWindDirection:X]+0.5*[MeterWindDirection:W])*Sin(Rad(#WindDirection#))-([MeterWindDirection:Y]+0.5*[MeterWindDirection:H])*Cos(Rad(#WindDirection#)))
Hidden=1

[MeterWind]
; Shows wind speed.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText
MeasureName=MeasureWindSpeedMPH
X=([BackgroundBox:W]-8)
StringAlign=Right
Y=-2r
Group=WeatherMeters | UnitMeters
Text="%1 #UnitSpeed#"
DynamicVariables=1
Hidden=1

[MeterVisibility]
; Shows visibility distance.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText
MeasureName=MeasureVisibilityMI
X=([BackgroundBox:W]-8)
StringAlign=Right
Y=0R
Group=WeatherMeters | UnitMeters
Text="%1 #UnitDistance#"
DynamicVariables=1
Hidden=1

[MeterBarometer]
; Shows barometer (i.e. pressure) reading.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText
MeasureName=MeasureBarometerIN
X=([BackgroundBox:W]-8)
StringAlign=Right
Y=0R
Group=WeatherMeters | UnitMeters
Text="%1 #UnitPressure#"
NumOfDecimals=2
DynamicVariables=1
Hidden=1

[MeterHumidity]
; Shows humidity.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText
MeasureName=MeasureHumidity
X=([BackgroundBox:W]-8)
StringAlign=Right
Y=0R
Group=WeatherMeters
Text="%1 %"
Hidden=1

[MeterSunrise]
; Shows time of sunrise.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText
MeasureName=MeasureSunrise12
X=([BackgroundBox:W]-8)
StringAlign=Right
Y=15R
Group=WeatherMeters
Text="%1"
Hidden=1

[MeterSunset]
; Shows time of sunset.
Meter=String
MeterStyle=StyleTinyText | StyleForegroundText
MeasureName=MeasureSunset12
X=([BackgroundBox:W]-8)
StringAlign=Right
Y=0R
Group=WeatherMeters
Text="%1"
Hidden=1


; ------------------------------------------------------------------------
; METERS - Refresh overlay
; ------------------------------------------------------------------------

[RefreshBackground]
; Shows background of overlay.
Meter=Image
X=1
Y=1
W=(#BackgroundWidth#-2)
H=(#BackgroundHeight#-2)
SolidColor=#HDOverlay#
Group=RefreshOverlay
MouseActionCursor=0
Hidden=1

[PreButtonText1]
; Shows 1st line of text before button.
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText | StyleCenterAlign
X=(#BackgroundWidth#/2)
Y=56
Group=RefreshOverlay
Text="Connection Error"
Hidden=1

[PreButtonText2]
; Shows 2nd line of text before button.
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText | StyleCenterAlign
X=(#BackgroundWidth#/2)
Y=0R
Text="Try again in a couple seconds."
Group=RefreshOverlay
Hidden=1

[RefreshButtonEdge]
; Shows 1px edge of refresh button; hidden when button is pressed.
Meter=Image
X=([RefreshButton:X]-1)
Y=([RefreshButton:Y]-1)
W=148
H=32
SolidColor=#WindowsColor#
Group=RefreshOverlay | WindowsColorGroup
DynamicVariables=1
Hidden=1

[RefreshButton]
; Shows refresh button; controls mouse behavior when interacting with button.
Meter=Image
X=((#BackgroundWidth#/2)-((148-2)/2))
Y=([PreButtonText1:Y]+60)
;W=([RefreshButtonEdge:W]-2)
;H=([RefreshButtonEdge:H]-2)
W=(148-2)
H=(32-2)
SolidColor=#WindowsColor#
Group=RefreshOverlay | WindowsColorGroup
LeftMouseDownAction=[!HideMeter RefreshButtonEdge][!HideMeter RefreshButtonCenter]
LeftMouseUpAction=[!Refresh]
MouseOverAction=[!ShowMeter RefreshButtonHoverEdge]
MouseLeaveAction=[!HideMeter RefreshButtonHoverEdge][!ShowMeter RefreshButtonEdge][!ShowMeter RefreshButtonCenter]
;[!SetOption RefreshButton MouseLeaveAction "[!HideMeter RefreshButtonHoverEdge][!ShowMeter RefreshButtonEdge][!ShowMeter RefreshButtonCenter]"]
;[!SetOption RefreshButton MouseLeaveAction "[]"]
MouseActionCursor=0
DynamicVariables=1
Hidden=1

[RefreshButtonHoverEdge]
; Shows transparent white edge when mouse is hovering over button. Also acts as white overlay when button is pressed.
Meter=Image
X=([RefreshButton:X]-1)
Y=([RefreshButton:Y]-1)
W=148
H=32
SolidColor=#TransparentWhite2#
Group=RefreshOverlay
Hidden=1

[RefreshButtonCenter]
; Shows smaller version of refresh button; shown when button is not pressed.
Meter=Image
X=([RefreshButton:X]+1)
Y=([RefreshButton:Y]+1)
W=(148-4)
H=(32-4)
SolidColor=#WindowsColor#
Group=RefreshOverlay | WindowsColorGroup
DynamicVariables=1
Hidden=1

[RefreshButtonText]
; Shows text on refresh button (i.e. "Refresh").
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText | StyleCenterAlign
X=(#BackgroundWidth#/2)
Y=([RefreshButton:Y]+5)
Group=RefreshOverlay
Text="Refresh"
FontFace=Segoe UI Semibold
Hidden=1


; ------------------------------------------------------------------------
; METERS - Location overlay
; ------------------------------------------------------------------------

[LocationBackground]
; Shows background of overlay.
Meter=Image
X=1
Y=1
W=(#BackgroundWidth#-2)
H=(#BackgroundHeight#-2)
SolidColor=#HDOverlay#
Group=LocationOverlay
LeftMouseUpAction=[!HideMeterGroup LocationOverlay][!HideMeter CheckingLocationText][!HideMeter ErrorText]
MouseActionCursor=0
Hidden=1

[PreInputText1]
; Shows 1st line of text before input box.
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText | StyleCenterAlign
X=(#BackgroundWidth#/2)
Y=37
Group=LocationOverlay
Text="Enter location using "Zip code,""
Hidden=1

[PreInputText2]
; Shows 2nd line of text before input box.
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText | StyleCenterAlign
X=(#BackgroundWidth#/2)
Y=0R
Group=LocationOverlay
Text=""City, State," or "City, Country" formatting."
Hidden=1

[LocationInputOverlayBorder]
; Shows border of non-active input box; changes color based on mouse position.
Meter=Image
X=((#BackgroundWidth#/2)-(271/2))
Y=([PreInputText1:Y]+60)
W=271
H=32
SolidColor=#SolidGreyPause#
Group=LocationOverlay
LeftMouseUpAction=[!CommandMeasure MeasureLocationInput "ExecuteBatch All"][!ShowMeter LocationInputBorder][!UpdateMeter LocationInputBorder]
MouseOverAction=[!SetOption LocationInputOverlayBorder SolidColor #SolidOffWhite#][!UpdateMeter LocationInputOverlayBorder]
MouseLeaveAction=[!SetOption LocationInputOverlayBorder SolidColor #SolidGreyPause#][!UpdateMeter LocationInputOverlayBorder]
MouseActionCursorName=Text
DynamicVariables=1
Hidden=1

[CheckingLocationText]
; Shows text while confirming location.
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText | StyleCenterAlign | StyleWindowsColorText
X=(#BackgroundWidth#/2)
Y=7R
Text="Searching for location..."
FontSize=10
DynamicVariables=1
Hidden=1

[ErrorText]
; Shows text if there is a connection error when confirming location.
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText | StyleCenterAlign | StyleErrorText
X=(#BackgroundWidth#/2)
Y=0R
Text="Error: Location not found. Please try again."
FontSize=10
DynamicVariables=1
Hidden=1

[PostInputText]
; Shows text instructions after input box.
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText | StyleCenterAlign
X=(#BackgroundWidth#/2)
Y=158
Group=LocationOverlay
Text="(Click outside text box to cancel; press "Enter" to confirm.)"
FontSize=8
DynamicVariables=1
Hidden=1

[LocationInputBorder]
; Shows border of active input box.
Meter=Image
X=[LocationInputOverlayBorder:X]
Y=[LocationInputOverlayBorder:Y]
W=271
H=32
SolidColor=#WindowsColor#
Group=LocationOverlay |  WindowsColorGroup
MouseActionCursorName=Text
DynamicVariables=1
Hidden=1

[LocationInputOverlay]
; Shows non-active input box; initiates input process when clicked and controls border color based on mouse position.
Meter=String
MeterStyle=StyleSmallText | StyleForegroundText
X=2r
Y=2r
W=(271-4)
H=(32-4)
SolidColor=#WindowsColorDark#
Group=LocationOverlay | WindowsDarkColorGroup
Text=#Location#
LeftMouseUpAction=[!CommandMeasure MeasureLocationInput "ExecuteBatch All"][!ShowMeter LocationInputBorder][!UpdateMeter LocationInputBorder]
MouseOverAction=[!SetOption LocationInputOverlayBorder SolidColor #SolidOffWhite#][!UpdateMeter LocationInputOverlayBorder]
MouseLeaveAction=[!SetOption LocationInputOverlayBorder SolidColor #SolidGreyPause#][!UpdateMeter LocationInputOverlayBorder]
MouseActionCursorName=Text
DynamicVariables=1
Hidden=1
